'''
В зоопарке Сингапура есть несколько кроликов. Чтобы накормить их, смотритель зоопарка купил n морковок, имеющих длины a1,a2,a3,…,an. Кролики очень быстро размножаются. У смотрителя зоопарка сейчас есть k кроликов и недостаточно морковок, чтобы прокормить их всех. Чтобы решить эту проблему, он решил разрезать морковки так, чтобы суммарно получилось k кусков. По некоторой причине длины всех получившихся морковок должны быть положительными целыми числами.

Кролику очень сложно кушать длинную морковку, поэтому время, которое требуется, чтобы съесть морковку длины x, равно x2.

Помогите смотрителю зоопарка разделить его морковки и найдите минимальное суммарное время, которое потребуется кроликам, чтобы их съесть.

Входные данные
В первой строке находятся два целых числа n и k (1≤n≤k≤105): изначальное количество морковок и количество кроликов.

В следующей строке находятся n целых чисел a1,a2,…,an (1≤ai≤106): длины морковок.

Гарантируется, что сумма ai не меньше k.

Выходные данные
Выведите одно целое число: минимальное суммарное время, которое потребуется кроликам, чтобы съесть морковки при каком-то их разделении.
'''

from heapq import *

n, k = map(int, input().split(" "))


def val(l, nums):
    unit = l // nums
    extra = l - unit * nums
    return (nums - extra) * unit * unit + extra * (unit + 1) * (unit + 1)
    
pq = []
arr = list(map(int, input().split(" ")))

total = 0
for x in range(n):
    total += arr[x] * arr[x]
    heappush(pq, (-val(arr[x], 1) + val(arr[x], 2), arr[x], 2))

for x in range(k - n):
    temp = heappop(pq)
    total += temp[0]
    a, b = temp[1], temp[2]
    heappush(pq, (-val(a, b) + val(a, b + 1), a, b + 1))

print(total)
